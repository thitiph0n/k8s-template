---
- name: install microk8s
  hosts: STAGING
  become: true
  tasks:
    - name: install microk8s with a snap
      shell: snap install microk8s --classic --channel=1.21/stable

    - name: modify a user account
      shell: usermod -a -G microk8s '{{ansible_user}}'
    - name: change permissions of directory
      file:
        path: /home/{{ansible_user}}/.kube
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        recurse: yes
        force: yes

    - name: reset ssh connection
      meta: reset_connection

    - name: copy kubectl config
      shell: microk8s config > /home/{{ansible_user}}/.kube/config

    - name: wait for microk8s ready
      shell: microk8s status --wait-ready
    - name: check node is installed
      debug:
        msg: 'install successful'

    - name: enable add-ons
      shell: microk8s enable dns metallb:{{ ansible_ssh_host }}-{{ ansible_ssh_host }}

    - name: apply ingress-nginx manifest
      shell: microk8s kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.47.0/deploy/static/provider/cloud/deploy.yaml
      register: result
    - name: print kubectl logs
      debug:
        msg: '{{ result.stdout }}'

    - name: copy manifest files
      copy:
        src: ../ingress
        dest: /home/{{ansible_user}}/k8s-config/
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: 0644

    - name: apply local-registry manifest
      shell: microk8s kubectl apply -f /home/{{ansible_user}}/k8s-config/ingress
      register: result
    - name: print kubectl logs
      debug:
        msg: '{{ result.stdout }}'

    # - name: allow port 80
    #   shell: ufw allow 80
    # - name: allow port 443
    #   shell: ufw allow 443

    - name: add microk8s kubectl aliases
      lineinfile:
        dest: '/home/{{ansible_user}}/.bash_aliases'
        create: yes
        mode: 0644
        line: 'alias kubectl="microk8s kubectl"'
        regexp: '^alias kubectl='

    - name: check node is up and running
      shell: microk8s kubectl get nodes
      register: result
    - name: print out node
      debug:
        msg: '{{ result.stdout }}'
